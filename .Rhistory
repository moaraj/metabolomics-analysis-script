install.packages("matrixStats")
install.packages("readr")
install.packages("tidyr")
install.packages("splitstackshape")
install.packages("dplyr")
#setwd("D:/Dropbox/Aging BXD Study/D _ Metabolomics/D _ Protocol Optimization/CV Calcs")
excel_script <-
'if WScript.Arguments.Count < 2 Then
WScript.Echo "Please specify the source and the destination files. Usage: ExcelToCsv <xls/xlsx source file> <csv destination file>"
Wscript.Quit
End If
csv_format = 6
Set objFSO = CreateObject("Scripting.FileSystemObject")
src_file = objFSO.GetAbsolutePathName(Wscript.Arguments.Item(0))
dest_file = objFSO.GetAbsolutePathName(WScript.Arguments.Item(1))
Dim oExcel
Set oExcel = CreateObject("Excel.Application")
Dim oBook
Set oBook = oExcel.Workbooks.Open(src_file)
oBook.SaveAs dest_file, csv_format
oBook.Close False
oExcel.Quit'
script_file_name = "ExcelToCsv.vbs"
write(excel_script,file = script_file_name)
# The script above allows command line conversion of xlxs file to csv conversiton in command line
#The script syntax:
#XlsToCsv.vbs [sourcexlsFile].xls [destinationcsvfile].csv
library(dplyr)
library(ggplot2)
library(plyr)
library(readr)
library(tidyr)
library(splitstackshape)
library(matrixStats)
Data_Curated_Annotations_transpose <- read_csv("Data_Curated_Annotations_transpose.csv",
col_types = cols(`59.0135` = col_skip(),
`71.0137` = col_integer(), extraction = col_character(),
index = col_integer()))
Data_Curated_Annotations_transpose$extraction <- as.factor(Data_Curated_Annotations_transpose$extraction)
Data_Curated_Annotations_transpose$diet <- as.factor(Data_Curated_Annotations_transpose$diet)
Data_Curated_Annotations_transpose$sex <- as.factor(Data_Curated_Annotations_transpose$sex)
metab_data <- Data_Curated_Annotations_transpose
sample_sd <-lapply(metab_data[6:length(names(metab_data))], function(x) sd(x))
sample_mean <-lapply(metab_data[6:length(names(metab_data))], function(x) mean(x))
p <- ggplot(metab_data, aes(factor(extraction), mouse ))
p + geom_violin() + geom_boxplot(width=.1)
extraction <- metab_data[metab_data$extraction %in% "H1",]
#Exctraction Cohorts
Hot_data  <- filter(metab_data,contains(" Hot")))
Hot_data  <- filter(metab_data,contains(" Hot"))
H1_data   <- filter(metab_data,contains(" H1"))
H24_data  <- filter(metab_data,contains(" H24"))
NH24_data <- filter(metab_data,contains(" NH24"))
Hot_data  <- filter(metab_data,contains(" Hot"))
H1_data   <- filter(metab_data,contains(" H1"))
H24_data  <- filter(metab_data,contains(" H24"))
#Exctraction Cohorts
Hot_data  <- filter(metab_data,extraction == " Hot")
H1_data   <- filter(metab_data,extraction == " H1")
H24_data  <- filter(metab_data,extraction == " H24")
NH24_data <- filter(metab_data,extraction == " NH24")
#Diet Cohorts
HF_data <- filter(metab_data, diet == "HF")
CD_data <- filter(metab_data, diet == "CD")
Hot_data
#Exctraction Cohorts
Hot_data  <- filter(metab_data,extraction == "Hot")
H1_data   <- filter(metab_data,extraction == "H1")
H24_data  <- filter(metab_data,extraction == "H24")
NH24_data <- filter(metab_data,extraction == "NH24")
#Diet Cohorts
HF_data <- filter(metab_data, diet == "HF")
CD_data <- filter(metab_data, diet == "CD")
Data_Curated_Annotations_transpose <- read_csv("Data_Curated_Annotations_transpose.csv",
col_types = cols(`59.0135` = col_skip(),
`71.0137` = col_integer(), extraction = col_character(),
index = col_integer()))
Data_Curated_Annotations_transpose$extraction <- as.factor(Data_Curated_Annotations_transpose$extraction)
Data_Curated_Annotations_transpose$diet <- as.factor(Data_Curated_Annotations_transpose$diet)
Data_Curated_Annotations_transpose$sex <- as.factor(Data_Curated_Annotations_transpose$sex)
metab_data <- Data_Curated_Annotations_transpose
sample_sd <-lapply(metab_data[6:length(names(metab_data))], function(x) sd(x))
sample_mean <-lapply(metab_data[6:length(names(metab_data))], function(x) mean(x))
p <- ggplot(metab_data, aes(factor(extraction), mouse ))
p + geom_violin() + geom_boxplot(width=.1)
extraction <- metab_data[metab_data$extraction %in% "H1",]
#Exctraction Cohorts
Hot_data  <- filter(metab_data,extraction == "Hot")
H1_data   <- filter(metab_data,extraction == "H1")
H24_data  <- filter(metab_data,extraction == "H24")
NH24_data <- filter(metab_data,extraction == "NH24")
#Diet Cohorts
HF_data <- filter(metab_data, diet == "HF")
CD_data <- filter(metab_data, diet == "CD")
Hot_data
#Exctraction Cohorts
Hot_data  <- filter(metab_data,extraction == "Hot")
H1_data   <- filter(metab_data,extraction == "H1")
H24_data  <- filter(metab_data,extraction == "H24")
NH24_data <- filter(metab_data,extraction == "NH24")
#Diet Cohorts
HF_data <- filter(metab_data, diet == "HF")
CD_data <- filter(metab_data, diet == "CD")
HF_sd <-lapply(HF_data[6:length(names(metab_data))], function(x) sd(x))
CD_mean <-lapply(CD_mean[6:length(names(metab_data))], function(x) mean(x))
HF_sd <-lapply(HF_data[6:length(names(HF_data))], function(x) sd(x))
CD_mean <-lapply(CD_mean[6:length(names(CD_data))], function(x) mean(x))
CD_mean <-lapply(CD_data[6:length(names(CD_data))], function(x) mean(x))
HF_mean <-lapply(HF_data[6:length(names(HF_data))], function(x) mean(x))
CD_mean <-lapply(CD_data[6:length(names(CD_data))], function(x) mean(x))
HF_sd <-lapply(HF_data[6:length(names(HF_data))], function(x) sd(x))
CD_sd <-lapply(HF_data[6:length(names(HF_data))], function(x) sd(x))
HF_mean
t.test(HF_mean,CD_mean)
t.test(x = HF_mean, y = CD_mean)
t.test(x = as.numeric(HF_mean), y = as.numeric(CD_mean))
Diet_data <- as.numeric(c(HF_mean, CD_mean))
Diet_data
Diet_data <- as.data.frame.numeric(HF_mean, CD_mean)
Diet_data
Diet_data <- as.data.frame.numeric(as.numeric(HF_mean), as.numeric(CD_mean))
Diet_data
Diet_data <- data.frame(as.numeric(HF_mean), as.numeric(CD_mean))
View(Diet_data)
row.names(HF_mean)
row.names(HF_data)
row.names(CD_data)
names(CD_data)
names(Diet_data) <- c("HF_mean","CD_mean")
pairwise.t.test(Diet_data$HF_mean, Diet_data$CD_mean,paired = TRUE)
length(HF_data)
length(CD_data)
length(HF_mean)
length(CD_mean)
pairwise.t.test(Diet_data$HF_mean, Diet_data$CD_mean)
pairwise.t.test(Diet_data$HF_mean, Diet_data$CD_mean,paired = TRUE)
p-values <- pairwise.t.test(Diet_data$HF_mean, Diet_data$CD_mean)
Diet_p_vals <- pairwise.t.test(Diet_data$HF_mean, Diet_data$CD_mean)
View(Diet_p_vals)
library(reshape)
install.packages("reshape")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("plyr")
install.packages("matrixStats")
install.packages("readr")
install.packages("tidyr")
install.packages("splitstackshape")
mdata <- melt(mydata, id=c("id","time"))
Diet_data$Index <- 1:length(CD_mean)
Diet_data
mdata <- melt(mydata, id="index")
mdata <- melt(Diet_data, id="index")
mdata <- melt(Diet_data, id="Index")
mdata
q <- ggplot(mdata, aes(factor(variable), value ))
q + geom_violin() + geom_boxplot(width=.1)
#Exctraction Cohorts
Hot_data  <- filter(metab_data,extraction == "Hot")
H1_data   <- filter(metab_data,extraction == "H1")
H24_data  <- filter(metab_data,extraction == "H24")
NH24_data <- filter(metab_data,extraction == "NH24")
#Diet Cohorts
HF_data <- filter(metab_data, diet == "HF")
CD_data <- filter(metab_data, diet == "CD")
HF_mean <-lapply(HF_data[6:length(names(HF_data))], function(x) mean(x))
CD_mean <-lapply(CD_data[6:length(names(CD_data))], function(x) mean(x))
HF_sd <-lapply(HF_data[6:length(names(HF_data))], function(x) sd(x))
CD_sd <-lapply(HF_data[6:length(names(HF_data))], function(x) sd(x))
Diet_data <- data.frame(as.numeric(HF_mean), as.numeric(CD_mean))
names(Diet_data) <- c("HF_mean","CD_mean")
Diet_data$Index <- 1:length(CD_mean)
mdata <- melt(Diet_data, id="Index")
q <- ggplot(mdata, aes(factor(variable), log(value) ))
q + geom_violin() + geom_boxplot(width=.1)
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=16, position=position_jitter(0.2))
metab_data
metab_data$index
str(metab_data)
Diet_data
pairwise.t.test(Diet_data$1,Diet_data$2)
Diet_data$1
head(Diet_data)
pairwise.t.test(Diet_data$HF_mean,Diet_data$CD_mean)
xx=pairwise.t.test(Diet_data$HF_mean,Diet_data$CD_mean)
str(xx)
xx$p.value
yy=Diet_data$HF_mean
yy
zz=Diet_data$CD_mean
pairwise.t.test(yy,zz)
yy
t.test(yy,zz)
str(t.test(yy,zz)
)
t.test(yy,zz)
t.test(yy,zz)$p.value
#Exctraction Cohorts
Hot_data  <- filter(metab_data,extraction == "Hot")
H1_data   <- filter(metab_data,extraction == "H1")
H24_data  <- filter(metab_data,extraction == "H24")
NH24_data <- filter(metab_data,extraction == "NH24")
#Diet Cohorts
HF_data <- filter(metab_data, diet == "HF")
CD_data <- filter(metab_data, diet == "CD")
HF_mean <-lapply(HF_data[6:length(names(HF_data))], function(x) mean(x))
CD_mean <-lapply(CD_data[6:length(names(CD_data))], function(x) mean(x))
HF_sd <-lapply(HF_data[6:length(names(HF_data))], function(x) sd(x))
CD_sd <-lapply(HF_data[6:length(names(HF_data))], function(x) sd(x))
Diet_data <- data.frame(as.numeric(HF_mean), as.numeric(CD_mean))
names(Diet_data) <- c("HF_mean","CD_mean")
Diet_data$Index <- 1:length(CD_mean)
mdata <- melt(Diet_data, id="Index")
q <- ggplot(mdata, aes(factor(variable), log(value) ))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=15, position=position_jitter(0.2))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.2))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.5))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.1))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=3, position=position_jitter(0.1))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=4, position=position_jitter(0.1))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=6, position=position_jitter(0.1))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=7, position=position_jitter(0.1))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=8, position=position_jitter(0.1))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.1))
q <- ggplot(mdata, aes(factor(variable), log(value, color = varible) ))
q <- ggplot(mdata, aes(factor(variable), log(value, color = variable) ))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.1))
q <- ggplot(mdata, aes(factor(variable), log(value) ))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.1))
q <- ggplot(mdata, aes(factor(variable), log(value)/100 ))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.1))
q <- ggplot(mdata, aes(factor(variable), log(value)))
q + geom_violin() + geom_boxplot(width=.1) + geom_jitter(shape=1, position=position_jitter(0.1))
t.test(HF_data)
View(HF_data)
t.test(,HF_data[6:length(HF_data)])
t.test(HF_data[,6:length(HF_data)])
View(extraction)
View(extraction)
levels(extraction)
levels(extraction[2])
metab_data
View(metab_data)
levels(metab_data)
levels(metab_data$extraction)
levels(metab_data$mouse)
levels(metab_data$mouse)
Data_Curated_Annotations_transpose$mouse <- as.factor(Data_Curated_Annotations_transpose$mouse)
metab_data <- Data_Curated_Annotations_transpose
levels(metab_data$mouse)
levels(metab_data$mouse)[1]
metab_data[,levels(metab_data$mouse)[1]]
metab_data[levels(metab_data$mouse)[1],]
lapply(metab_data[levels(metab_data$mouse)[1],], function(x) t.test(x))
metab_data[levels(metab_data$mouse)[1],]
as.numeric(metab_data[levels(metab_data$mouse)[1],])
levels(metab_data$mouse)
metab_data[, mouse == 833]
metab_data[, mouse == "833"]
metab_data[,mouse == "833"]
metab_data[,metab_data$mouse == "833"]
metab_data[,metab_data$mouse]
metab_data[,metab_data$mouse == 833]
metab_data[metab_data$mouse == 833]
metab_data[metab_data$mouse == 833,]
library(dplyr)
library(ggplot2)
library(plyr)
library(readr)
library(tidyr)
library(splitstackshape)
library(matrixStats)
library(tibble)
Data_Curated_Annotations_transpose <- read_csv("Data_Curated_Annotations_transpose.csv",
col_types = cols( `71.0137` = col_integer(), extraction = col_character(),
index = col_integer()))
metab_data <- Data_Curated_Annotations_transpose %>% dplyr::mutate_each_(., funs = funs(as.factor), vars = c("extraction", "diet", "sex", "mouse"))
#mod<-function(x,m){
#    t1<-floor(x/m)
#    return(x-t1*m)
#}
#index_vector        <- c(1:nrow(metab_data))
#replicate_index     <- mod(metab_data$index,2)
#replicate_index     <- as.data.frame(as.character(rev((replicate_index + 1))))
#index_vector        <- cbind(index_vector, replicate_index)
#names(index_vector) <- c("index", "replicate")
metab_data <- merge(metab_data
%>% mutate(replicate  = paste("rep_", rep(c(1,2), times = dim(metab_data)[1]/2), sep = ""))
%>% select(index, replicate), metab_data, by = "index")
#zou need to have unqiue values in the bz mere
#can be done by selecting multiple columns
Data_Annotations    <- read.csv(file = "Data_Curated_Annotations.csv",stringsAsFactors = FALSE)
primary_names       <- Data_Annotations$Primary.Name
meta_data           <- c("index","replicate","extraction","mouse","diet","sex")
primary_meta_names       <- c(meta_data, primary_names)
#names(metab_data)   <- primary_meta_names
#duplicated_colnames <- which(duplicated(primary_meta_names,fromLast = FALSE))
#metab_data<-lapply(duplicated_colnames, function(x) metab_data[-x])
duplicated_cols <- which(duplicated(primary_meta_names))
filtered_metab_data <- metab_data %>% select(-duplicated_cols)
filtered_primary_meta_names <- primary_meta_names[-duplicated_cols]
final_metab_data <- filtered_metab_data %>% setnames(filtered_primary_meta_names)
#Set up variables for the aov analysis
metab <- final_metab_data
counts <- metab$`Acetic acid`
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ extraction + diet"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ extraction + diet"), data = metab)
metab.mod <- lm(cbind(metab[6:length(metab)]) ~ sex + diet + extraction, data=metab)
metab.mod <- lm(lapply(metab[6:10], function(x) cbind(x)) ~ sex + diet + extraction, data=metab)
metab.mod <- lm(lapply(metab[7:10], function(x) cbind(x)) ~ sex + diet + extraction, data=metab)
lapply(metab[7:10], function(x) cbind(x)
)
x <- lapply(metab[7:10], function(x) cbind(x))
x
class(x)
as.matrix(x)
as.matrix(x[[]])
as.matrix(x[[1]])
as.matrix(x[1[]])
as.matrix(x[2[1]])
as.matrix(x[2[]])
as.matrix(x[[2]])
as.matrix(x[[3]])
y <- lapply(1:ncol(metab[6:ncol(metab)]), function(x) cbind(as.matrix([[x]])))
x
x[]
x[1]
x[1]
class(x[1])
class(x[[1]])
x <- lapply(metab[7:10], function(x) cbind(x))
y <- lapply(1:ncol(metab[6:ncol(metab)]), function(y) cbind(as.matrix(x[[y]])))
x <- lapply(metab[7:10], function(x) cbind(x))
y <- lapply(1:ncol(metab[7:10]), function(y) cbind(as.matrix(x[[y]])))
y
class(y)
x <- lapply(metab[7:10], function(x) cbind(x))
y <- lapply(1:3, function(y) cbind(as.matrix(x[[y]])))
y
class(y)
class
class(x)
x <- lapply(metab[7:10], function(x) cbind(x))
y <- lapply(1:3, function(y) as.matrix(x[[y]]))
y
class(y)
y <- lapply(1:3, function(y) c.bind(as.matrix(x[[y]]))
summary(fit)
x <- lapply(metab[7:10], function(x) cbind(x))
y <- lapply(1:3, function(y) c.bind(as.matrix(x[[y]]))
summary(fit)
x <- lapply(metab[7:10], function(x) cbind(x))
y <- lapply(1:3, function(y) as.matrix(x[[y]]))
class(x)
class(y)
x <- lapply(metab[7:10], function(x) cbind(x))
y <- as.matrix(lapply(1:3, function(y) x[[y]]))
y
y <- lapply(1:3, function(y) x[[y]])
y <- lapply(x[1:3], function(y) x[[y]])
x <- lapply(metab[7:10], function(x) cbind(x))
x
y
y <- lapply(x[1:3], function(z) x[[z]])
x[1]
y <- lapply(x[1:3], function(z) x[z])
y
metab.mod <- lm(as.matrix(metab[7:10])) ~ sex + diet + extraction, data=metab)
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet + extraction, data=metab)
Anova(metab.mod, test.statistic="Roy")
library(heplots)
install.packages("heplots")
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet + extraction, data=metab)
Anova(metab.mod, test.statistic="Roy")
library(heplots)
Anova(metab.mod, test.statistic="Roy")
metab <- filter(final_metab_data,final_metab_data$extraction == "NH24")
counts <- metab$`Acetic acid`
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ extraction + diet"), data = metab)
View(metab)
fit <- aov(formula = as.formula("counts ~ extraction + diet"), data = metab)
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet + extraction, data=metab)
language = EN
Sys.setenv(LANG = "en")
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet + extraction, data=metab)
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
metab.mod <- lm(as.matrix(metab[7:ncol(metab)]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
ncol(meta_data)
ncol(metab_data)
metab.mod <- lm(as.matrix(metab[7:339]) ~ sex + diet, data=metab)
metab.mod <- lm(as.matrix(metab[7:20]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
metab.mod <- lm(as.matrix(metab[7:100]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
Sys.setenv(LANG = "en")
metab.mod <- lm(as.matrix(metab[7:100]) ~ sex + diet, data=metab)
metab.mod <- lm(as.matrix(metab[7:100]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
fit <- aov(formula = as.formula("counts ~ sex + diet"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex + diet"), data = metab)
summary(fit)
summary(fit2)
fit2 <- glm(formula = as.formula("counts ~ sex + diet"), data = metab,family = binomial)
fit2 <- glm(formula = as.formula("counts ~ sex + diet"), data = metab,family = "binomial")
fit2 <- glm(formula = as.formula("counts ~ sex + diet"), data = metab)
summary(fit)
metab <- filter(final_metab_data)
counts <- metab$`Acetic acid`
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex + diet"), data = metab)
summary(fit2)
fit <- aov(formula = as.formula("counts ~ sex * diet + extraction"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex * diet + extraction"), data = metab)
summary(fit)
summary(fit2)
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
summary.aov(fit)
summary.aov(fit2)
summary.aov(fit)
counts <- metab[7:10]
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
counts <- as.matrix(metab[7:10])
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
summary(fit)
counts <- as.matrix(metab[6:ncol(metab)])
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
summary(fit)
metab <- filter(final_metab_data, extraction == "H1")
counts <- as.matrix(metab[6:ncol(metab)])
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
View(metab)
counts <- as.matrix(metab[6:ncol(metab)])
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
metab <- final_metab_data
counts <- as.matrix(metab[6:ncol(metab)])
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
summary(fit)
counts <- as.matrix(metab[6:ncol(metab)])
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
counts <- as.matrix(metab[6:20])
extraction  <- metab$extraction
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
counts <- as.matrix(metab$`Acetic acid`)
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex + diet + extraction"), data = metab)
summary(fit)
summary(fit2)
metab <- log(final_metab_data)
metab
counts
counts <- log(as.matrix(metab$`Acetic acid`))
extraction  <- metab$extraction
mouse   <- metab$mouse
diet    <- metab$diet
sex     <- metab$sex
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction + replicate"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex + diet + extraction + replicate"), data = metab)
summary(fit)
summary(fit2)
