Wscript.Quit
End If
csv_format = 6
Set objFSO = CreateObject("Scripting.FileSystemObject")
src_file = objFSO.GetAbsolutePathName(Wscript.Arguments.Item(0))
dest_file = objFSO.GetAbsolutePathName(WScript.Arguments.Item(1))
Dim oExcel
Set oExcel = CreateObject("Excel.Application")
Dim oBook
Set oBook = oExcel.Workbooks.Open(src_file)
oBook.SaveAs dest_file, csv_format
oBook.Close False
oExcel.Quit'
script_file_name = "ExcelToCsv.vbs"
write(excel_script,file = script_file_name)
# The script above allows command line conversion of xlxs file to csv conversiton in command line
#The script syntax:
#XlsToCsv.vbs [sourcexlsFile].xls [destinationcsvfile].csv
library(dplyr)
library(ggplot2)
library(plyr)
library(readr)
library(tidyr)
library(splitstackshape)
library(matrixStats)
library(tibble)
library(heplots)
Data_Curated_Annotations_transpose <- read_csv("Data_Curated_Annotations_transpose.csv",
col_types = cols( `71.0137` = col_integer(), extraction = col_character(),
index = col_integer()))
metab_data <- Data_Curated_Annotations_transpose %>% dplyr::mutate_each_(., funs = funs(as.factor), vars = c("extraction", "diet", "sex", "mouse"))
#mod<-function(x,m){
#    t1<-floor(x/m)
#    return(x-t1*m)
#}
#index_vector        <- c(1:nrow(metab_data))
#replicate_index     <- mod(metab_data$index,2)
#replicate_index     <- as.data.frame(as.character(rev((replicate_index + 1))))
#index_vector        <- cbind(index_vector, replicate_index)
#names(index_vector) <- c("index", "replicate")
metab_data <- merge(metab_data
%>% mutate(replicate  = paste("rep_", rep(c(1,2), times = dim(metab_data)[1]/2), sep = ""))
%>% select(index, replicate), metab_data, by = "index")
#zou need to have unqiue values in the bz mere
#can be done by selecting multiple columns
Data_Annotations    <- read.csv(file = "Data_Curated_Annotations.csv",stringsAsFactors = FALSE)
primary_names       <- Data_Annotations$Primary.Name
meta_data           <- c("index","replicate","extraction","mouse","diet","sex")
primary_meta_names  <- c(meta_data, primary_names)
#names(metab_data)   <- primary_meta_names
#duplicated_colnames <- which(duplicated(primary_meta_names,fromLast = FALSE))
#metab_data<-lapply(duplicated_colnames, function(x) metab_data[-x])
duplicated_cols <- which(duplicated(primary_meta_names))
filtered_metab_data <- metab_data %>% select(-duplicated_cols)
filtered_primary_meta_names <- primary_meta_names[-duplicated_cols]
final_metab_data <- filtered_metab_data %>% setnames(filtered_primary_meta_names)
#Set up variables for the aov analysis
metab <- final_metab_data
counts <- as.matrix(log(metab[7:20]))
#extraction  <- metab$extraction
#mouse   <- metab$mouse
#diet    <- metab$diet
#sex     <- metab$sex
#replicate <- metab$replicate
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction + replicate"), data = metab)
fit2 <- glm(formula = as.formula("counts ~ sex + diet + extraction + replicate"), data = metab)
metab.mod <- lm(as.matrix(metab[7:10]) ~ sex + diet, data=metab)
Anova(metab.mod, test.statistic="Roy")
summary(fit)
summary(fit2)
plot(fit,which = 1:2)
plot(fit2, which = 1:6)
p <- ggplot(metab_data, aes(x = diet, y = metab_data$Pyruvaldehyde)) +
geom_boxplot(fill = "grey80", colour = "blue") +
scale_x_discrete() + xlab("Treatment Group") +
ylab("Log Metabolite Intensities")
#Exctraction Cohorts
Hot_data  <- filter(final_metab_data,extraction == "Hot") %>% filter(sex == "F")
H1_data   <- filter(final_metab_data,extraction == "H1") %>% filter(sex == "F")
H24_data  <- filter(final_metab_data,extraction == "H24") %>% filter(sex == "F")
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
#Diet Cohorts
HF_data <- filter(final_metab_data, diet == "HF") %>% filter(sex == "F")
CD_data <- filter(final_metab_data, diet == "CD") %>% filter(sex == "F")
#Replicate Cohorts
rep_1_data <- filter(final_metab_data, replicate == "rep_1") %>% filter(sex == "F")
rep_2_data <- filter(final_metab_data, replicate == "rep_2") %>% filter(sex == "F")
HF_mean <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) mean(x)))
CD_mean <-as.numeric(lapply(CD_data[7:length(names(CD_data))], function(x) mean(x)))
HF_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(x)))
CD_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(x)))
HF_CV <-HF_sd/HF_mean
CD_CV <-CD_sd/CD_mean
rep_1_data <-as.numeric(lapply(rep_1_data[7:length(names(rep_1_data))], function(x) sd(x)/mean(x)))
rep_2_data <-as.numeric(lapply(rep_2_data[7:length(names(rep_2_data))], function(x) sd(x)/mean(x)))
Diet_data <- data.frame(HF_CV,CD_CV)
names(Diet_data) <- c("HF_cv","CD_cv")
Diet_data$Index <- 1:nrow(Diet_data)
metab_data <- melt(Diet_data, id="Index")
q <- ggplot(metab_data, aes(factor(variable), log(value)))
q + geom_violin() + geom_boxplot(width=.1)
# violin plot with median points
vioplot2(Hot_data)
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x),mean(x)))
H1_CV   <- as.numeric(lapply(H1_data[7:ncol(H1_data)], function(x) sd(x),mean(x)))
#Exctraction Cohorts
Hot_data  <- filter(final_metab_data,extraction == "Hot") %>% filter(sex == "F")
H1_data   <- filter(final_metab_data,extraction == "H1") %>% filter(sex == "F")
H24_data  <- filter(final_metab_data,extraction == "H24") %>% filter(sex == "F")
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
#Diet Cohorts
HF_data <- filter(final_metab_data, diet == "HF") %>% filter(sex == "F")
CD_data <- filter(final_metab_data, diet == "CD") %>% filter(sex == "F")
#Replicate Cohorts
rep_1_data <- filter(final_metab_data, replicate == "rep_1") %>% filter(sex == "F")
rep_2_data <- filter(final_metab_data, replicate == "rep_2") %>% filter(sex == "F")
HF_mean <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) mean(x)))
CD_mean <-as.numeric(lapply(CD_data[7:length(names(CD_data))], function(x) mean(x)))
HF_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(x)))
CD_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(x)))
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x),mean(x)))
CD_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(x)))
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x),mean(x)))
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x)/mean(x)))
H1_CV   <- as.numeric(lapply(H1_data[7:ncol(H1_data)], function(x) sd(x)/mean(x)))
H24_CV  <- as.numeric(lapply(H24_data[7:ncol(H24_data)], function(x) sd(x)/mean(x)))
NH24_CV <- as.numeric(lapply(NH24_data[7:ncol(NH24_data)], function(x) sd(x)/mean(x)))
CD_CV <-as.numeric(lapply(rep_1_data[7:length(names(rep_1_data))], function(x) sd(x)/mean(x)))
HF_CV <-as.numeric(lapply(rep_2_data[7:length(names(rep_2_data))], function(x) sd(x)/mean(x)))
rep_1_CV <-as.numeric(lapply(rep_1_data[7:length(names(rep_1_data))], function(x) sd(x)/mean(x)))
rep_2_CV <-as.numeric(lapply(rep_2_data[7:length(names(rep_2_data))], function(x) sd(x)/mean(x)))
Extraction_CV <- cbind(Hot_CV,H1_CV,H24_CV,NH24_CV)
View(Extraction_CV)
plot(Hot_CV)
boxplot(Extraction_CV)
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x)/mean(x)*100))
H1_CV   <- as.numeric(lapply(H1_data[7:ncol(H1_data)], function(x) sd(x)/mean(x)*100))
H24_CV  <- as.numeric(lapply(H24_data[7:ncol(H24_data)], function(x) sd(x)/mean(x)*100))
NH24_CV <- as.numeric(lapply(NH24_data[7:ncol(NH24_data)], function(x) sd(x)/mean(x)*100))
Extraction_CV <- cbind(Hot_CV,H1_CV,H24_CV,NH24_CV)
violin
library(dplyr)
library(ggplot2)
library(plyr)
library(readr)
library(tidyr)
library(splitstackshape)
library(matrixStats)
library(tibble)
library(heplots)
library(vioplot)
install.packages("vioplot")
library(vioplot)
library(sm)
library(vioplot)
library(sm)
library(vioplot)
HF_mean <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) mean(x)))
CD_mean <-as.numeric(lapply(CD_data[7:length(names(CD_data))], function(x) mean(x)))
HF_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(x)))
CD_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(x)))
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x)/mean(x)*100))
H1_CV   <- as.numeric(lapply(H1_data[7:ncol(H1_data)], function(x) sd(x)/mean(x)*100))
H24_CV  <- as.numeric(lapply(H24_data[7:ncol(H24_data)], function(x) sd(x)/mean(x)*100))
NH24_CV <- as.numeric(lapply(NH24_data[7:ncol(NH24_data)], function(x) sd(x)/mean(x)*100))
Extraction_CV <- cbind(Hot_CV,H1_CV,H24_CV,NH24_CV)
Diet_CV <- cbind(CD_CV,HF_CV)
Rep_cv <- cbind(rep_1_CV,rep_2_CV)
vioplot(Extraction_CV)
vioplot(Diet_CV)
vioplot(H1_CV,H24_CV,NH24_CV)
vioplot(Rep_cv)
vioplot(rep_1_CV,rep_2_CV)
vioplot(rep_1_CV,rep_2_CV,col = "Blue")
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
boxplot(Hot_CV,H1_CV,H24_CV,NH24_CV)
violplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
vioplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
vioplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV)
vioplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
HF_mean <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) mean(log(x))))
CD_mean <-as.numeric(lapply(CD_data[7:length(names(CD_data))], function(x) mean(log(x))))
HF_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(log(x))))
CD_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd(log(x))))
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x)/mean(log(x))*100))
H1_CV   <- as.numeric(lapply(H1_data[7:ncol(H1_data)], function(x) sd(x)/mean(log(x))*100))
H24_CV  <- as.numeric(lapply(H24_data[7:ncol(H24_data)], function(x) sd(x)/mean(log(x))*100))
NH24_CV <- as.numeric(lapply(NH24_data[7:ncol(NH24_data)], function(x) sd(x)/mean(log(x))*100))
Extraction_CV <- cbind(Hot_CV,H1_CV,H24_CV,NH24_CV)
CD_CV <-as.numeric(lapply(rep_1_data[7:length(names(rep_1_data))], function(x) sd(x)/mean(log(x))*100))
HF_CV <-as.numeric(lapply(rep_2_data[7:length(names(rep_2_data))], function(x) sd(x)/mean(log(x))*100))
Diet_CV <- cbind(CD_CV,HF_CV)
rep_1_CV <-as.numeric(lapply(rep_1_data[7:length(names(rep_1_data))], function(x) sd(x)/mean(log(x))*100))
rep_2_CV <-as.numeric(lapply(rep_2_data[7:length(names(rep_2_data))], function(x) sd(x)/mean(log(x))*100))
Rep_cv <- cbind(rep_1_CV,rep_2_CV)
q <- ggplot(cbing(), aes(factor(variable), log(value)))
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,t.test())
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV)
HF_mean <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) mean((x))))
CD_mean <-as.numeric(lapply(CD_data[7:length(names(CD_data))], function(x) mean((x))))
HF_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd((x))))
CD_sd <-as.numeric(lapply(HF_data[7:length(names(HF_data))], function(x) sd((x))))
Hot_CV  <- as.numeric(lapply(Hot_data[7:ncol(Hot_data)], function(x) sd(x)/mean((x))*100))
H1_CV   <- as.numeric(lapply(H1_data[7:ncol(H1_data)], function(x) sd(x)/mean((x))*100))
H24_CV  <- as.numeric(lapply(H24_data[7:ncol(H24_data)], function(x) sd(x)/mean((x))*100))
NH24_CV <- as.numeric(lapply(NH24_data[7:ncol(NH24_data)], function(x) sd(x)/mean((x))*100))
Extraction_CV <- cbind(Hot_CV,H1_CV,H24_CV,NH24_CV)
CD_CV <-as.numeric(lapply(rep_1_data[7:length(names(rep_1_data))], function(x) sd(x)/mean((x))*100))
HF_CV <-as.numeric(lapply(rep_2_data[7:length(names(rep_2_data))], function(x) sd(x)/mean((x))*100))
Diet_CV <- cbind(CD_CV,HF_CV)
rep_1_CV <-as.numeric(lapply(rep_1_data[7:length(names(rep_1_data))], function(x) sd(x)/mean((x))*100))
rep_2_CV <-as.numeric(lapply(rep_2_data[7:length(names(rep_2_data))], function(x) sd(x)/mean((x))*100))
Rep_cv <- cbind(rep_1_CV,rep_2_CV)
q <- ggplot(cbing(), aes(factor(variable), log(value)))
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE,varwidth = TRUE)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE,varwidth = FALSE)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE, log= TRUE)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE, log = TRUE)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE, log = 10)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE, log = "10")
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE, log ="10")
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE, log =10)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE, 10)
boxplot(rep_1_CV,rep_2_CV,CD_CV,HF_CV,Hot_CV,H1_CV,H24_CV,NH24_CV,notch = TRUE)
CD_CV <-as.numeric(lapply(filter(rep_1_data[7:length(names(rep_1_data))], extraction = "NH24"), function(x) sd(x)/mean((x))*100))
CD_CV <-as.numeric(lapply(filter(rep_1_data[7:length(names(rep_1_data))], extraction == "NH24"), function(x) sd(x)/mean((x))*100))
CD_CV <-as.numeric(lapply(filter(rep_1_data, diet == "HF")[7:length(names(rep_1_data))]), function(x) sd(x)/mean((x))*100))
CD_CV <-as.numeric(lapply(filter(rep_1_data, diet == "HF")[7:length(names(rep_1_data))]), function(x) sd(x)/mean((x))*100)
CD_CV <-as.numeric(
lapply x = (filter(CD_data, CD_data$extraction = "NH24")[7:length(names(rep_1_data))]),
CD_CV <-as.numeric (
lapply     (X = filter(CD_data, CD_data$extraction = "NH24")[7:length(names(rep_1_data))]),
CD_CV <-as.numeric (
lapply     ( filter(CD_data, CD_data$extraction = "NH24")[7:length(names(rep_1_data))],
CD_CV <-as.numeric (
lapply     ( filter(CD_data, CD_data$extraction == "NH24")[7:length(names(rep_1_data))],
function(x) sd(x)/mean((x))*100
))
box(CD_CV)
boxplot(CD_CV)
CD_sd <-as.numeric(lapply(CD_data[7:length(names(CD_data))], function(x) sd((x))))
HF_mean
pairwise.t.test(HF_mean,CD_mean)
install.packages("multcomp")
?multcomp
??multcomp
pairwise.t.test(as.matrix(metab[7:20]),g = diet,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7]),g = diet,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7]),g = c("sex", "extraction", "diet") ,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7:15]),g = c("sex", "extraction", "diet") ,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7:16]),g = c("sex", "extraction", "diet") ,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7:11]),g = c("extraction") ,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7:11]),g = extraction ,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7]),g = extraction ,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7]), g = diet ,p.adjust.method = "bonferroni")
pairwise.t.test(as.matrix(metab[7]), g = sex ,p.adjust.method = "bonferroni")
Tukey.fit <- TukeyHSD(fit, conf.level = 0.95)
counts <- as.matrix(log(metab[7]))
counts <- log(metab[7])
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction + replicate"), data = metab)
counts <- as.matrix(log(metab[7]))
fit <- aov(formula = as.formula("counts ~ sex + diet + extraction + replicate"), data = metab)
Tukey.fit <- TukeyHSD(fit, conf.level = 0.95)
Tukey.fit <- TukeyHSD(fit, conf.level = 0.95)
Tukey.fit
fit <- aov(formula = as.formula("counts ~ sex + diet + replicate"), data = metab)
Tukey.fit <- TukeyHSD(fit, conf.level = 0.95)
Tukey.fit
metab.mod <- lm(as.matrix(metab[7:100]) ~ sex + diet, data=metab)
str(metab.mod)
metab.mod
ncol(metab)
counts <- as.matrix(log(metab[7:329]))
fit <- aov(formula = as.formula("counts ~ sex + diet + replicate"), data = metab)
Tukey.fit <- TukeyHSD(fit, conf.level = 0.95)
fit$coefficients
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ sex + diet + replicate"), data = metab)
fit <- aov(formula = as.formula("counts ~ sex + diet + replicate"), data = NH24_data)
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ sex + diet + replicate"), data = NH24_data)
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
fit_summary <- summary(fit)
fit_summary
length(fit_summary)
df <- data.frame(matrix(unlist(fit_summary), nrow=length(fit_summary), byrow=T),stringsAsFactors=FALSE)
View(df)
df <- data.frame(matrix(unlist(fit_summary), nrow=length(fit_summary), byrow=T),stringsAsFactors=TRUE)
names(fit_summary)
fit_summary[1]
unlist(fit_summary[1])
length(unlist(fit_summary[1]))
counts <- as.matrix(log(NH24_data[7:329]))
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
NH24_fit_summary_df <- data.frame(matrix(unlist(fit_summary), nrow=length(fit_summary), byrow=T),stringsAsFactors=TRUE)
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
NH24_fit_summary_df <- data.frame(matrix(unlist(fit_summary), nrow=length(fit_summary), byrow=T),stringsAsFactors=TRUE)
fit_summary
counts <- as.matrix(log(metab[7]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = filtered_metab_data)
Tukey.fit <- TukeyHSD(fit, conf.level = 0.95)
fit_summary <- summary(fit)
summary(fit)
class(summary(fit))
summary.fit
coef(fit)
anova(fit)
fittable <- anova(fit)
View(fittable)
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
fittable <- anova(fit)
fittable <-lapply(fit[1:length(fit)], function(x) rbind(fit[x]))
fittable <-lapply(fit[1:length(fit)], function(x) rbind(anova(x))
)
fittable <-lapply(fit[1:length(fit)], function(x) anova(x)
)
fittable <-lapply(fit[1:length(fit)], function(x) anova(x))
anova(fit[1])
anova(fit[[1]])
fit[[1]]
fit
fit
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
fit$coefficients
fittable <- coefficients(fit)
fittable <- fit$effects
fittable <- NULL
fittable <- anova(fit)
fittable <- anova(fit[1])
fittable <- summary(fit)
summary(fit)
summary(fit)[1]
NH24_fit_summary_df <- data.frame(matrix(unlist(fit_summary), nrow=length(fit_summary), byrow = TRUE),stringsAsFactors=TRUE)
names(NH24_fit_summary_df)
View(NH24_fit_summary_df)
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
NH24_fit_summary_df <- data.frame(matrix(unlist(fit_summary), nrow=length(fit_summary), byrow = TRUE),stringsAsFactors=TRUE)
fit
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
NH24_CV
View(NH24_data)
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate"), data = NH24_data)
fit <- aov(formula = as.formula("counts ~ diet + replicate + sex"), data = NH24_data)
fit <- aov(formula = as.formula("counts ~ diet + replicate + mouse"), data = NH24_data)
summary(fit)
NH24_fit_summary_df <- data.frame(matrix(unlist(summary(fit)), nrow=length(summary(fit)), byrow = TRUE),stringsAsFactors=TRUE)
View(NH24_fit_summary_df)
fit_summary <- summary(fit)
fit_summary$` Response Acetic acid`
aov(fit_summary$` Response Acetic acid`)
fit_summary$` Response Pyruvaldehyde`
fit_summary[1]
fit_summary[[1]]
fit_summary[[[1]]]
fit_summary[[1]
]
fit_summary[[1]]
str(fit_summary)
str(fit_summary)
fit_summary[[F value]]
fit_summary[["F value"]]
fit_summary[[1]
]
fit_summary[[1]]
fit_summary[[2]]
x <- rbind.data.frame(fit_summary[[1]])
x <- rbind.data.frame(fit_summary[[2]])
View(x)
x <- rbind.data.frame(fit_summary[[1]])
x <- rbind.data.frame(fit_summary[[1]]$`F value`)
x <- cbind.data.frame(fit_summary[[1]]$`F value`)
x <- cbind.data.frame(fit_summary[[1:100]]$`F value`)
x <- sapply(fit_summary[1:10], function(x) cbind.data.frame(fit_summary[[]]$`F value`))
x <- sapply(fit_summary[1:10], function(x) cbind.data.frame(fit_summary[[x]]$`F value`))
x <- sapply(fit_summary[1:10], function(x) cbind.data.frame([x]$`F value`))
x <- sapply(fit_summary[1:10], function(x) cbind.data.frame(x)
)
x <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x)
)
x <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
x <- x["F value",]
x <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
y <- x["F value"]
z <- x["Pr(>F)"]
View(x)
y <- cbind(x["F value",])
View(y)
y <- rbind(x["F value",])
y <- cbind.data.frame(x["F value",])
z <- cbind.data.frame(x["Pr(>F)",])
plot(z)
plot(y[1:10])
plot(y[1:2])
plot(y[1,])
hist(y[1,])
hist(numeric(y[1,]))
hist(as.numeric(y[1,]))
x <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
y <- cbind.data.frame(x["F value",])
z <- cbind.data.frame(x["Pr(>F)",])
x <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
y <- cbind.data.frame(x["F value",])
z <- cbind.data.frame(x["Pr(>F)",])
z
View(z)
y <- y[-4,]
z <- z[-4,]
z <- cbind.data.frame(x["Pr(>F)",])
y <- cbind.data.frame(x["F value",])
y <- y[-4,]
z <- cbind.data.frame(x["Pr(>F)",])
z <- z[-4,]
y <- y[-4,]
z <- z[-4,]
y
View(y)
head(x)
head(y)
x
x[1]
x[1]
x
x <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
x
NH24_fit_summary_df <- data.frame(matrix(unlist(summary(fit)), nrow=length(summary(fit)), byrow = TRUE),stringsAsFactors=TRUE)
x <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
y <- cbind.data.frame(x["F value",])
y <- y[-4,]
z <- cbind.data.frame(x["Pr(>F)",])
z <- z[-4,]
NH24_f_value <- cbind.data.frame(x["F value",])
NH24_f_value <- y[-4,]
NH24_pr_f <- cbind.data.frame(x["Pr(>F)",])
NH24_pr_f <- z[-4,]
NH24_f_value <- cbind.data.frame(x["F value",])
NH24_f_value <- y[-4,]
NH24_pr_f <- cbind.data.frame(x["Pr(>F)",])
NH24_pr_f <- z[-4,]
NH24_fit_summary_df <- data.frame(matrix(unlist(summary(fit)), nrow=length(summary(fit)), byrow = TRUE),stringsAsFactors=TRUE)
View(NH24_pr_f)
View(NH24_fit_summary_df)
View(NH24_f_value)
View(NH24_fit_summary_df)
View(NH24_pr_f)
View(rep_1_data)
View(NH24_pr_f)
View(NH24_f_value)
View(NH24_pr_f)
View(NH24_data)
View(NH24_fit_summary_df)
View(NH24_f_value)
View(NH24_f_value)
View(NH24_fit_summary_df)
NH24_data <- filter(final_metab_data,extraction == "NH24") %>% filter(sex == "F")
counts <- as.matrix(log(NH24_data[7:329]))
fit <- aov(formula = as.formula("counts ~ diet + replicate + mouse"), data = NH24_data)
fit_summary <- summary(fit)
fit_summary_table <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
NH24_f_value <- cbind.data.frame(x["F value",])
NH24_f_value <- y[-4,]
NH24_pr_f <- cbind.data.frame(x["Pr(>F)",])
NH24_pr_f <- z[-4,]
fit_summary
NH24_f_value
fit_summary
row.names.data.frame(NH24_f_value, NH24_pr_f) <- c("diet", "replicate", "mouse")
row.names.data.frame(NH24_pr_f) <- c("diet", "replicate", "mouse")
row.names(NH24_f_value) <- c("diet", "replicate", "mouse")
row.names(NH24_pr_f) <- c("diet", "replicate", "mouse")
row.names(NH24_f_value) <- c("diet", "replicate", "mouse")
View(NH24_f_value)
fit_summary <- summary(fit)
fit_summary_table <- sapply(fit_summary[1:length(fit_summary)], function(x) cbind.data.frame(x))
NH24_f_value <- cbind.data.frame(fit_summary_table["F value",])
NH24_f_value <- y[-4,]
NH24_pr_f <- cbind.data.frame(fit_summary_table["Pr(>F)",])
NH24_pr_f <- z[-4,]
row.names(NH24_f_value) <- c("diet", "replicate", "mouse")
row.names(NH24_pr_f) <- c("diet", "replicate", "mouse")
View(NH24_f_value)
View(NH24_pr_f)
NH24_pr_f_transpose <- t(NH24_pr_f)
View(NH24_pr_f_transpose)
plot(NH24_pr_f_transpose)
plot(1/NH24_pr_f_transpose)
which(NH24_pr_f_transpose > 1E-5)
which(NH24_pr_f_transpose > 1E-5,arr.ind = )
alpha <- 0.05
n_tests <- nrow(NH24_pr_f_transpose)
bonf_correction <- alpha/n_tests
bonf_correction
NH24_f_value
View(NH24_f_value)
